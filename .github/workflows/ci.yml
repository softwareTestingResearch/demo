name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.9", "3.10"]
  
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Restore pytest-ranking cache
      id: restore-pytest-ranking-cache
      if: always()
      uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/.pytest_cache/v/pytest_ranking_data
        key: pytest-ranking-cache-${{ runner.os }}-${{ matrix.python }}

    - name: Print restored pytest cache
      if: always() && steps.restore-pytest-ranking-cache.outputs.cache-hit == 'true'
      run: |
        cat ${{ github.workspace }}/.pytest_cache/v/pytest_ranking_data/last_durations
        cat ${{ github.workspace }}/.pytest_cache/v/pytest_ranking_data/num_runs_since_fail
    - name: Run tests
      run: pytest -v --rank --rank-weight=0-0-1
    - name: Print saved pytest cache
      if: always()
      run: |
        cat ${{ github.workspace }}/.pytest_cache/v/pytest_ranking_data/last_durations
        cat ${{ github.workspace }}/.pytest_cache/v/pytest_ranking_data/num_runs_since_fail


    - name: Save pytest-ranking cache
      id: save-pytest-ranking-cache
      if: always()
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}/.pytest_cache/v/pytest_ranking_data
        key: pytest-ranking-cache-${{ runner.os }}-${{ matrix.python }}-${{ github.run_id }}

